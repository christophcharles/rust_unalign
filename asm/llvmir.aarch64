; ModuleID = '7j79nwrj13re145'
source_filename = "7j79nwrj13re145"
target datalayout = "e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128"
target triple = "aarch64-unknown-linux-gnu"

%Result = type { [0 x i8], i8, [7 x i8] }
%"Result::Err" = type { [1 x i8], i8, [0 x i8] }
%"Result::Ok" = type { [1 x i32], i32, [0 x i32] }

@__rustc_debug_gdb_scripts_section__ = linkonce_odr unnamed_addr constant [34 x i8] c"\01gdb_load_rust_pretty_printers.py\00", section ".debug_gdb_scripts", align 1

; rust_unalign::test
; Function Attrs: nonlazybind uwtable
define i64 @_ZN12rust_unalign4test17h6ac51dffdf4477f1E(i32, i32) unnamed_addr #0 !dbg !12 {
start:
  %_6 = alloca i8, align 1
  %_0 = alloca %Result, align 4
  %pin = alloca i32, align 4
  %reg = alloca i32, align 4
  store i32 %0, i32* %reg, align 4
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !30, metadata !DIExpression()), !dbg !31
  store i32 %1, i32* %pin, align 4
  call void @llvm.dbg.declare(metadata i32* %pin, metadata !32, metadata !DIExpression()), !dbg !31
  %2 = load i32, i32* %pin, align 4, !dbg !33
  %3 = icmp ult i32 %2, 32, !dbg !33
  br i1 %3, label %bb2, label %bb1, !dbg !34

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1, !dbg !35
  %4 = bitcast %Result* %_0 to %"Result::Err"*, !dbg !36
  %5 = getelementptr inbounds %"Result::Err", %"Result::Err"* %4, i32 0, i32 1, !dbg !36
  %6 = load i8, i8* %_6, align 1, !dbg !36, !range !37
  %7 = trunc i8 %6 to i1, !dbg !36
  %8 = zext i1 %7 to i8, !dbg !36
  store i8 %8, i8* %5, align 1, !dbg !36
  %9 = bitcast %Result* %_0 to i8*, !dbg !36
  store i8 1, i8* %9, align 4, !dbg !36
  br label %bb3, !dbg !38

bb2:                                              ; preds = %start
  %10 = load i32, i32* %reg, align 4, !dbg !39
  %11 = bitcast %Result* %_0 to %"Result::Ok"*, !dbg !40
  %12 = getelementptr inbounds %"Result::Ok", %"Result::Ok"* %11, i32 0, i32 1, !dbg !40
  store i32 %10, i32* %12, align 4, !dbg !40
  %13 = bitcast %Result* %_0 to i8*, !dbg !40
  store i8 0, i8* %13, align 4, !dbg !40
  br label %bb3, !dbg !41

bb3:                                              ; preds = %bb1, %bb2
  %14 = bitcast %Result* %_0 to i64*, !dbg !38
  %15 = load i64, i64* %14, align 4, !dbg !38
  ret i64 %15, !dbg !38
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

attributes #0 = { nonlazybind uwtable "target-cpu"="generic" "target-features"="+strict-align" }
attributes #1 = { nounwind readnone speculatable }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}

!0 = !{i32 2, !"RtLibUseGOT", i32 1}
!1 = !{i32 2, !"Debug Info Version", i32 3}
!2 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !3, producer: "clang LLVM (rustc version 1.39.0 (4560ea788 2019-11-04))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4)
!3 = !DIFile(filename: "src/lib.rs", directory: "/home/christoph/Programmation/Rust/rust_unalign")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ErrorTest", scope: !7, file: !6, baseType: !8, size: 8, align: 8, flags: DIFlagEnumClass, elements: !9)
!6 = !DIFile(filename: "<unknown>", directory: "")
!7 = !DINamespace(name: "rust_unalign", scope: null)
!8 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!9 = !{!10, !11}
!10 = !DIEnumerator(name: "InvalidPin", value: 0)
!11 = !DIEnumerator(name: "Err2", value: 1)
!12 = distinct !DISubprogram(name: "test", linkageName: "_ZN12rust_unalign4test17h6ac51dffdf4477f1E", scope: !7, file: !3, line: 13, type: !13, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, templateParams: !24, retainedNodes: !24)
!13 = !DISubroutineType(types: !14)
!14 = !{!15, !23, !23}
!15 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result", scope: !7, file: !6, size: 64, align: 32, elements: !16, identifier: "8dc92cd3f6f54854b86d362a53803771")
!16 = !{!17}
!17 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7, file: !6, size: 64, align: 32, elements: !18, templateParams: !24, identifier: "8dc92cd3f6f54854b86d362a53803771_variant_part", discriminator: !29)
!18 = !{!19, !25}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !17, file: !6, baseType: !20, size: 64, align: 32, extraData: i64 0)
!20 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !15, file: !6, size: 64, align: 32, elements: !21, templateParams: !24, identifier: "8dc92cd3f6f54854b86d362a53803771::Ok")
!21 = !{!22}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !20, file: !6, baseType: !23, size: 32, align: 32, offset: 32)
!23 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!24 = !{}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !17, file: !6, baseType: !26, size: 64, align: 32, extraData: i64 1)
!26 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !15, file: !6, size: 64, align: 32, elements: !27, templateParams: !24, identifier: "8dc92cd3f6f54854b86d362a53803771::Err")
!27 = !{!28}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !26, file: !6, baseType: !5, size: 8, align: 8, offset: 8)
!29 = !DIDerivedType(tag: DW_TAG_member, scope: !7, file: !6, baseType: !8, size: 8, align: 8, flags: DIFlagArtificial)
!30 = !DILocalVariable(name: "reg", arg: 1, scope: !12, file: !3, line: 1, type: !23)
!31 = !DILocation(line: 1, scope: !12)
!32 = !DILocalVariable(name: "pin", arg: 2, scope: !12, file: !3, line: 1, type: !23)
!33 = !DILocation(line: 14, column: 7, scope: !12)
!34 = !DILocation(line: 14, column: 4, scope: !12)
!35 = !DILocation(line: 17, column: 16, scope: !12)
!36 = !DILocation(line: 17, column: 4, scope: !12)
!37 = !{i8 0, i8 2}
!38 = !DILocation(line: 18, column: 1, scope: !12)
!39 = !DILocation(line: 15, column: 26, scope: !12)
!40 = !DILocation(line: 15, column: 15, scope: !12)
!41 = !DILocation(line: 15, column: 8, scope: !12)
