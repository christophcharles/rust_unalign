; ModuleID = 'cml8watvlc5c0vk'
source_filename = "cml8watvlc5c0vk"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

%Result = type { [0 x i8], i8, [7 x i8] }
%"Result::Err" = type { [1 x i8], i8, [0 x i8] }
%"Result::Ok" = type { [1 x i32], i32, [0 x i32] }

@__rustc_debug_gdb_scripts_section__ = linkonce_odr unnamed_addr constant [34 x i8] c"\01gdb_load_rust_pretty_printers.py\00", section ".debug_gdb_scripts", align 1

; rust_unalign::test
; Function Attrs: nonlazybind uwtable
define internal void @_ZN12rust_unalign4test17ha1e5255e8972d19dE(%Result* noalias nocapture sret dereferenceable(8), i32, i32) unnamed_addr #0 !dbg !13 {
start:
  %_6 = alloca i8, align 1
  %pin = alloca i32, align 4
  %reg = alloca i32, align 4
  store i32 %1, i32* %reg, align 4
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !31, metadata !DIExpression()), !dbg !32
  store i32 %2, i32* %pin, align 4
  call void @llvm.dbg.declare(metadata i32* %pin, metadata !33, metadata !DIExpression()), !dbg !32
  %3 = load i32, i32* %pin, align 4, !dbg !34
  %4 = icmp ult i32 %3, 32, !dbg !34
  br i1 %4, label %bb2, label %bb1, !dbg !35

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1, !dbg !36
  %5 = bitcast %Result* %0 to %"Result::Err"*, !dbg !37
  %6 = getelementptr inbounds %"Result::Err", %"Result::Err"* %5, i32 0, i32 1, !dbg !37
  %7 = load i8, i8* %_6, align 1, !dbg !37, !range !38
  %8 = trunc i8 %7 to i1, !dbg !37
  %9 = zext i1 %8 to i8, !dbg !37
  store i8 %9, i8* %6, align 1, !dbg !37
  %10 = bitcast %Result* %0 to i8*, !dbg !37
  store i8 1, i8* %10, align 4, !dbg !37
  br label %bb3, !dbg !39

bb2:                                              ; preds = %start
  %11 = load i32, i32* %reg, align 4, !dbg !40
  %12 = bitcast %Result* %0 to %"Result::Ok"*, !dbg !41
  %13 = getelementptr inbounds %"Result::Ok", %"Result::Ok"* %12, i32 0, i32 1, !dbg !41
  store i32 %11, i32* %13, align 4, !dbg !41
  %14 = bitcast %Result* %0 to i8*, !dbg !41
  store i8 0, i8* %14, align 4, !dbg !41
  br label %bb3, !dbg !42

bb3:                                              ; preds = %bb1, %bb2
  ret void, !dbg !39
}

; rust_unalign::main
; Function Attrs: nonlazybind uwtable
define internal void @_ZN12rust_unalign4main17h8d3e74ce788af2d8E() unnamed_addr #0 !dbg !43 {
start:
  %_1 = alloca %Result, align 4
; call rust_unalign::test
  call void @_ZN12rust_unalign4test17ha1e5255e8972d19dE(%Result* noalias nocapture sret dereferenceable(8) %_1, i32 0, i32 14), !dbg !46
  br label %bb1, !dbg !46

bb1:                                              ; preds = %start
  ret void, !dbg !47
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nonlazybind
define i32 @main(i32, i8**) unnamed_addr #2 {
top:
  %2 = load volatile i8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__rustc_debug_gdb_scripts_section__, i32 0, i32 0), align 1
; call std::rt::lang_start
  %3 = call i32 @_ZN3std2rt10lang_start17h2a2a8a825428dc43E(void ()* @_ZN12rust_unalign4main17h8d3e74ce788af2d8E, i32 %0, i8** %1)
  ret i32 %3
}

; std::rt::lang_start
; Function Attrs: nonlazybind uwtable
declare hidden i32 @_ZN3std2rt10lang_start17h2a2a8a825428dc43E(void ()* nonnull, i32, i8**) unnamed_addr #0

attributes #0 = { nonlazybind uwtable "target-cpu"="generic" "target-features"="+v7,+thumb2,+soft-float,-neon,+strict-align" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nonlazybind "target-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2}
!llvm.dbg.cu = !{!3}

!0 = !{i32 7, !"PIE Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !4, producer: "clang LLVM (rustc version 1.39.0 (4560ea788 2019-11-04))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !5)
!4 = !DIFile(filename: "src/main.rs", directory: "/home/christoph/Programmation/Rust/rust_unalign")
!5 = !{!6}
!6 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ErrorTest", scope: !8, file: !7, baseType: !9, size: 8, align: 8, flags: DIFlagEnumClass, elements: !10)
!7 = !DIFile(filename: "<unknown>", directory: "")
!8 = !DINamespace(name: "rust_unalign", scope: null)
!9 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!10 = !{!11, !12}
!11 = !DIEnumerator(name: "InvalidPin", value: 0)
!12 = !DIEnumerator(name: "Err2", value: 1)
!13 = distinct !DISubprogram(name: "test", linkageName: "_ZN12rust_unalign4test17ha1e5255e8972d19dE", scope: !8, file: !4, line: 11, type: !14, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, templateParams: !25, retainedNodes: !25)
!14 = !DISubroutineType(types: !15)
!15 = !{!16, !24, !24}
!16 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result", scope: !8, file: !7, size: 64, align: 32, elements: !17, identifier: "743356f32a528eb83933900731f86487")
!17 = !{!18}
!18 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8, file: !7, size: 64, align: 32, elements: !19, templateParams: !25, identifier: "743356f32a528eb83933900731f86487_variant_part", discriminator: !30)
!19 = !{!20, !26}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !18, file: !7, baseType: !21, size: 64, align: 32, extraData: i64 0)
!21 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !16, file: !7, size: 64, align: 32, elements: !22, templateParams: !25, identifier: "743356f32a528eb83933900731f86487::Ok")
!22 = !{!23}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !21, file: !7, baseType: !24, size: 32, align: 32, offset: 32)
!24 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!25 = !{}
!26 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !18, file: !7, baseType: !27, size: 64, align: 32, extraData: i64 1)
!27 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !16, file: !7, size: 64, align: 32, elements: !28, templateParams: !25, identifier: "743356f32a528eb83933900731f86487::Err")
!28 = !{!29}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !27, file: !7, baseType: !6, size: 8, align: 8, offset: 8)
!30 = !DIDerivedType(tag: DW_TAG_member, scope: !8, file: !7, baseType: !9, size: 8, align: 8, flags: DIFlagArtificial)
!31 = !DILocalVariable(name: "reg", arg: 1, scope: !13, file: !4, line: 1, type: !24)
!32 = !DILocation(line: 1, scope: !13)
!33 = !DILocalVariable(name: "pin", arg: 2, scope: !13, file: !4, line: 1, type: !24)
!34 = !DILocation(line: 12, column: 7, scope: !13)
!35 = !DILocation(line: 12, column: 4, scope: !13)
!36 = !DILocation(line: 15, column: 16, scope: !13)
!37 = !DILocation(line: 15, column: 4, scope: !13)
!38 = !{i8 0, i8 2}
!39 = !DILocation(line: 16, column: 1, scope: !13)
!40 = !DILocation(line: 13, column: 26, scope: !13)
!41 = !DILocation(line: 13, column: 15, scope: !13)
!42 = !DILocation(line: 13, column: 8, scope: !13)
!43 = distinct !DISubprogram(name: "main", linkageName: "_ZN12rust_unalign4main17h8d3e74ce788af2d8E", scope: !8, file: !4, line: 18, type: !44, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagMainSubprogram, unit: !3, templateParams: !25, retainedNodes: !25)
!44 = !DISubroutineType(types: !45)
!45 = !{null}
!46 = !DILocation(line: 19, column: 12, scope: !43)
!47 = !DILocation(line: 20, column: 1, scope: !43)
